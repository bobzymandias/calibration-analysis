import time
import random

def fact(a):
    res=1
    for i in range(2,a+1):
        res*=i
    return res

def binomial(x,y):
    return fact(y)/(fact(x)*fact(y-x))

def pascal(y):
    return [binomial(x,y) for x in range(y+1)]
    
def prob(y,p=0.5):
    ptrue=[p**x for x in range(y+1)]
    pfalse=[(1-p)**(y-x) for x in range(y+1)]
    #res=list(range(y+1))
    #for x in range(y+1):
    res=[binomial(x,y)*ptrue[x]*pfalse[x] for x in range(y+1)]
    return res

def baseline(samples,probs,result):
    expanded=[]
    scott=1
    for i in range(len(samples)):
        expanded.append(prob(samples[i],probs[i]))
        scott*=expanded[i][result[i]]
    return expanded,scott

def rloop(expanded,samples,scott,probtemp,n):
    global rtemp
    if n+1<len(samples):
        for i in range(samples[n]+1):
            if n==0:
                probtemp[n]=expanded[n][i]
            else:
                probtemp[n]=probtemp[n-1]*expanded[n][i]
            rloop(expanded,samples,scott,probtemp,n+1)
    else:
        for i in range(samples[n]+1):
            probtemp[n]=probtemp[n-1]*expanded[n][i]
            if probtemp[n] <= scott:
                rtemp+=probtemp[n]
    return rtemp

def randomiser(samples,prob):
    res=0
    for i in range(samples):
        if random.random()<prob:
            res+=1
    return res

def testrun(runs):
    global rtemp
    rvalav=0
    samples=[12,4,14,15,17]
    probs=[0.5,0.6,0.7,0.8,0.9]
    result=list(range(5))
    for i in range(runs):
        for j in range(5):
            result[j]=randomiser(samples[j],probs[j])
        rtemp=0
        expanded,testres=baseline(samples,probs,result)
        rvalue1=rloop(expanded,samples,testres,list(range(len(samples))),0)
        rvalav+=rvalue1
        print(rvalue1)
        if rvalue1<=0.05:
            print(result)
    rvalav/=runs
    return rvalav
        

time.clock()

rvalue=list(range(10))

#scott
#2017
samples=[8,22,13,18,25,9,4]
result=[5,14,8,16,24,8,4]
#result=[6,15,7,17,24,8,4]
probs=[0.5,0.6,0.7,0.8,0.9,0.95,0.99]

rtemp=0
expanded,scott=baseline(samples[:-2],probs[:-2],result[:-2])
rvalue[0]=rloop(expanded,samples[:-2],scott,list(range(len(samples[:-2]))),0)

#2016
samples=[13,21,16,16,17,9,3]
result=[8,12,13,13,16,9,3]
probs=[0.5,0.6,0.7,0.8,0.9,0.95,0.99]

rtemp=0
expanded,scott=baseline(samples[:-2],probs[:-2],result[:-2])
rvalue[1]=rloop(expanded,samples[:-2],scott,list(range(len(samples[:-2]))),0)

#2015
samples=[3,8,5,6,4,7]
result=[0,4,4,5,4,7]
probs=[0.5,0.6,0.7,0.8,0.9,0.95]

rtemp=0
expanded,scott=baseline(samples[:-1],probs[:-1],result[:-1])
rvalue[2]=rloop(expanded,samples[:-1],scott,list(range(len(samples[:-1]))),0)

#2014
samples=[8,9,8,15,7,5,6]
result=[4,7,6,12,7,5,6]
probs=[0.5,0.6,0.7,0.8,0.9,0.95,0.99]

rtemp=0
expanded,scott=baseline(samples[:-2],probs[:-2],result[:-2])
rvalue[3]=rloop(expanded,samples[:-2],scott,list(range(len(samples[:-2]))),0)

#zach
#2017
samples=[13,13,20,26,19]
result=[7,9,16,20,17]
probs=[0.5,0.6,0.7,0.8,0.9]

rtemp=0
expanded,zach=baseline(samples,probs,result)
rvalue[4]=rloop(expanded,samples,zach,list(range(len(samples))),0)

#anatoly
#2017
samples=[12,4,14,15,17,17,5]
result=[3,2,9,14,16,16,5]
probs=[0.5,0.6,0.7,0.8,0.9,0.95,0.99]

rtemp=0
expanded,anatoly=baseline(samples[:-1],probs[:-1],result[:-1])
rvalue[5]=rloop(expanded,samples[:-1],anatoly,list(range(len(samples[:-1]))),0)

#2016
samples=[4,6,10,9,13,5,2]
result=[2,1,8,8,12,5,2]
probs=[0.5,0.6,0.7,0.8,0.9,0.95,0.99]

rtemp=0
expanded,anatoly=baseline(samples[:-2],probs[:-2],result[:-2])
rvalue[6]=rloop(expanded,samples[:-2],anatoly,list(range(len(samples[:-2]))),0)

timer=time.clock()
